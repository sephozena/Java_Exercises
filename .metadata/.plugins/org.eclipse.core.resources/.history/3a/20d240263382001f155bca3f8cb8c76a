package Practice6;

import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

public class OrderManagement {
	private ProductManagement productManagement;
	private List<Order> orderHistory;
	
	public OrderManagement(ProductManagement productManagement) {
		this.productManagement = productManagement;
		this.orderHistory = new ArrayList<>();
	}
	
	public void createOrder(Scanner scanner) {
		Order newOrder = new Order();
		
		while(true) {
			System.out.println("Enter your order (or type done to finish)");
			String productName = scanner.nextLine();
			
			// back to menu using 'done' keyword
			if(productName.equalsIgnoreCase("done")) {
				break;
			}
			
			Product product = productManagement.getProductByName(productName);
			if(product == null) {
				System.out.println("'"+productName+"' is not in the list. Try again!");
				productManagement.displayInstockProduct();
				continue;
			}
			
			if(product.getProductQuantity() == 0) {
				System.out.println("'"+product.getProductName()+"' is currently out of stock!");
				productManagement.displayInstockProduct();
				continue;
			}
			
			int quantity = 0;
			while(true) {
				System.out.println("Enter quantity for " + "'" +productName+ "'");
				try {
					quantity = scanner.nextInt();
					scanner.nextLine();
					if(quantity <= 0 || quantity > product.getProductQuantity()) {
						System.out.println("\nYou entered invalid amount for '"+product.getProductName()+ "'");
						System.out.println("Current availability: " + product.getProductQuantity() +"\n");
					}else {
						break;
					}
							
				} catch(InputMismatchException | IllegalArgumentException e) {
					System.out.println("Invalid input!");
					System.out.println("Info of the selected product: " + product);
					scanner.nextLine();
				}
			}
			product.decreaseProductQuantity(quantity);
			
		}
		
	}
	
	public void viewOrder() {
		
	}
	
	public void placeOrder() {
		
	}
	
	public void cancelOrder() {
		
	}


}
